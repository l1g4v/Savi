// SPDX-FileCopyrightText: Copyright 2023 Savi
// SPDX-License-Identifier: GPL-3.0-only 

import { Button, GroupBox, SpinBox, ComboBox, CheckBox, LineEdit, TabWidget, VerticalBox, HorizontalBox, Slider, SpinBox } from "std-widgets.slint";
import { Page } from "page.slint";
import { PeersComponent } from "../components/components.slint";
import { SelfPeer, Signaling, PeerList } from "../globals.slint";
export component ConnectionPage inherits Page{
    title: "Connection";
    description: "This page shows the network connection status and allows to change the connection settings.";
    in-out property <string> address;
    in-out property <string> password;
    GroupBox{
        vertical-stretch: 0;
        title: "Connection settings";
        
        VerticalLayout{
            spacing: 8px;
            HorizontalLayout{
                spacing: 8px;
                LineEdit{
                    placeholder-text: "Username";
                    edited(x) => {
                        SelfPeer.name = x;
                    }
                }
                
                Button{
                    text: "Create";
                    clicked() => {
                        Signaling.create();
                    }
                }
                Button{
                    text: "Connect";
                    clicked() => {
                        Signaling.connect(address,password); 
                    }
                }
            }
            HorizontalLayout {
                spacing: 8px;
                LineEdit{
                    read-only: Signaling.hosting;
                    enabled: !Signaling.connected;
                    text: Signaling.address;
                    placeholder-text: "Signaling server address";
                    edited(x) => {
                        root.address = x;
                    }
                }
                LineEdit{
                    read-only: Signaling.hosting;
                    enabled: !Signaling.connected;
                    text: Signaling.key;
                    placeholder-text: "Signaling server password";
                    edited(x) => {
                        root.password = x;
                    }
                }
            }
        }
    }
    PeersComponent{}
    
}